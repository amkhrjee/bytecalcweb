var t;!function(t){t[t.LEFT_PAREN=0]="LEFT_PAREN",t[t.RIGHT_PAREN=1]="RIGHT_PAREN",t[t.DOT=2]="DOT",t[t.MINUS=3]="MINUS",t[t.PLUS=4]="PLUS",t[t.SLASH=5]="SLASH",t[t.CROSS=6]="CROSS",t[t.PERCENT=7]="PERCENT",t[t.EQUAL=8]="EQUAL",t[t.EXPONENT=9]="EXPONENT",t[t.END=10]="END",t[t.NUMBER=11]="NUMBER",t[t.MOD=12]="MOD",t[t.LOG_TWO=13]="LOG_TWO"}(t||(t={}));class e{constructor(e,s,r){this.toString=()=>t[this.type]+": "+this.lexeme+" "+this.literal,this.type=e,this.lexeme=s,this.literal=r}}class s{constructor(t){this.source=t,this.start=0,this.current=0,this.tokens=[]}scanTokens(){for(;this.current<this.source.length;)this.start=this.current,this.scanToken();this.tokens.push(new e(t.END,"",null));let s=0;return this.tokens.forEach((e=>{if(s>0)if(e.type==t.LEFT_PAREN||e.type==t.LOG_TWO){let e=s-1;this.tokens[e].type!=t.NUMBER&&this.tokens[e].type!=t.RIGHT_PAREN||this.addCrossAt(s)}else if(e.type==t.RIGHT_PAREN){let e=s+1;this.tokens[e].type!=t.NUMBER&&this.tokens[e].type!=t.LEFT_PAREN||this.addCrossAt(s+1)}s+=1})),this.tokens}addCrossAt(s){this.tokens.splice(s,0,new e(t.CROSS,"",null)),s+=2}scanToken(){switch(this.advanceChar()){case"(":this.addToken(t.LEFT_PAREN,null);break;case")":this.addToken(t.RIGHT_PAREN,null);break;case".":this.addToken(t.DOT,null);break;case"-":this.addToken(t.MINUS,null);break;case"+":this.addToken(t.PLUS,null);break;case"Ã—":this.addToken(t.CROSS,null);break;case"%":this.addToken(t.PERCENT,null);break;case"/":this.addToken(t.SLASH,null);break;case"=":this.addToken(t.EQUAL,null);break;case"^":this.addToken(t.EXPONENT,null);break;case"l":this.current+=3,this.addToken(t.LOG_TWO,null);break;case"m":this.current+=2,this.addToken(t.MOD,null);break;default:for(;this.isDigit(this.peek());)this.advanceChar();if("."==this.peek()&&this.isDigit(this.peekNext()))for(this.advanceChar();this.isDigit(this.peek());)this.advanceChar();this.addToken(t.NUMBER,parseFloat(this.source.substring(this.start,this.current)))}}advanceChar(){return this.source.charAt(this.current++)}addToken(t,s){let r=this.source.substring(this.start,this.current);this.tokens.push(new e(t,r,s))}peek(){return this.current<this.source.length?this.source.charAt(this.current):null}isDigit(t){return!isNaN(parseInt(t))}peekNext(){return this.current+1<this.source.length?this.source.charAt(this.current+1):null}}class r{}class i extends r{constructor(t,e,s){super(),this.left=t,this.operator=e,this.right=s}accept(t){return t.visitBinaryExpr(this)}}class n extends r{constructor(t){super(),this.expression=t}accept(t){return t.visitGroupingExpr(this)}}class h extends r{constructor(t){super(),this.value=t}accept(t){return t.visitLiteralExpr(this)}}class a extends r{constructor(t,e){super(),this.operator=t,this.right=e}accept(t){return t.visitUnaryExpr(this)}}class u{constructor(t){this.tokens=[],this.current=0,this.tokens=t}parse(){console.log("Parsing");try{return this.expression()}catch(t){throw t}}expression(){return this.percentage()}percentage(){let e=this.term();if(this.match(t.PERCENT)){let t=this.previous(),s=this.term();e=new i(e,t,s)}return e}term(){let e=this.factor();for(;this.match(t.PLUS,t.MINUS);){let t=this.previous(),s=this.factor();e=new i(e,t,s)}return e}factor(){let e=this.exponent();for(;this.match(t.SLASH,t.CROSS,t.MOD);){let t=this.previous(),s=this.exponent();e=new i(e,t,s)}return e}exponent(){let e=this.unary();for(;this.match(t.EXPONENT);){let t=this.previous(),s=this.exponent();e=new i(e,t,s)}return e}unary(){if(this.match(t.MINUS,t.LOG_TWO)){let t=this.previous(),e=this.unary();return new a(t,e)}return this.primary()}primary(){if(this.match(t.NUMBER))return new h(this.previous().literal);if(this.match(t.LEFT_PAREN)){let e=this.expression();return this.consume(t.RIGHT_PAREN,"Missing )"),new n(e)}throw Error("Format Error")}match(...t){for(let e of t)if(this.check(e))return this.advance(),!0;return!1}check(t){return!this.isAtEnd()&&this.peek().type==t}advance(){return this.isAtEnd()||(this.current+=1),this.previous()}isAtEnd(){return this.tokens[this.current].type==t.END}peek(){return this.tokens[this.current]}previous(){return this.tokens[this.current-1]}consume(t,e){if(this.check(t))return this.advance();throw Error(e)}}class c{visitBinaryExpr(e){let s=this.evaluate(e.left),r=this.evaluate(e.right);try{switch(e.operator.type){case t.PLUS:return s+r;case t.MINUS:return s-r;case t.SLASH:return s/r;case t.CROSS:return s*r;case t.MOD:return s%r;case t.EXPONENT:return Math.pow(s,r);case t.PERCENT:return s/r*100;default:return null}}catch(t){throw t}}visitGroupingExpr(t){return this.evaluate(t.expression)}visitLiteralExpr(t){return t.value}visitUnaryExpr(e){let s=this.evaluate(e.right);switch(e.operator.type){case t.MINUS:return-s;case t.LOG_TWO:return Math.log2(s);default:return null}}interpret(t){return this.evaluate(t)}evaluate(t){return t.accept(this)}}export{c as Interpreter,u as Parser,s as Scanner,e as Token,t as TokenType};
